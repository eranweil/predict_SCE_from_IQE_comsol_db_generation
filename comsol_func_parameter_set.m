model.param.set('L', [num2str(L) '[um]'], 'length of diode bulk');
model.param.set('V0', '0[V]', 'bias voltage');
model.param.set('p0', [num2str(p0) '[cm^-3]'], 'hole density');
model.param.set('n0', [num2str(n0) '[cm^-3]'], 'electron density');
model.param.set('bulk_doping', [num2str(bulk_doping) '[cm^-3]'], 'bulk carrier density');
model.param.set('PHY', '1[kW/m^2]/2[eV]', 'incident photon flux');
model.param.set('Lambda0', '500[nm]', 'light frequency');
model.param.set('q', '1.6E-19[C]', 'electron charge');
model.param.set('A', '1[cm^2]', 'cross section');
model.param.set('loc0', '5[um]', 'base location for gaussian pulse');
model.param.set('sigma', '50[nm]', 'standard deviation for gaussian pulse');
model.param.set('delta_amplitude_b', '1E20[1/s/m^2]');
model.param.set('T', '293.15[K]', 'temperature');
model.param.set('mesh_step', 'L / number_of_intervals_in_mesh', 'distance between mesh points');
model.param.set('number_of_intervals_in_mesh', '2400', 'number of elements in mesh');
model.param.set('size_of_mesh_element', '(L/number_of_intervals_in_mesh)', 'size of single element in mesh');
model.param.set('number_of_deltas', '40', 'number of deltas to calculate');
model.param.set('pn_junction_depth', '0.5[um]', 'depth of p+n junction');
model.param.set('nn_junction_depth', '0.5[um]', 'depth of nn+ junction');
model.param.set('taup_f', [num2str(taup) '[us]'], 'hole lifetime');
model.param.set('taun_f', [num2str(taun) '[us]'], 'electron lifetime');
model.param.set('mun_f', [num2str(mun) '[cm^2/(V*s)]'], 'electron mobility');
model.param.set('mup_f', [num2str(mup) '[cm^2/(V*s)]'], 'hole mobility');
